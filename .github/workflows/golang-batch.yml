name: github action golang batch 

on:
  push:
  schedule:
    - cron: "30 19 * * *" # UTC
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Git checkout current branch #作業ブランチにchekout
        uses: actions/checkout@v2 #サードパーティの公開アクションを利用
        with:
          ref: ${{ github.ref }}
      - name: Git setting
        run: |
          # pullしておかないと Re-run all jobs 実行時はコケてしまうため
          git pull
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
      - name: Commit and push
        run: |
          git commit --allow-empty -m "chore: prevent automatic workflow stopping" -m "see: https://docs.github.com/en/actions/managing-workflow-runs/disabling-and-enabling-a-workflow"
          git push
      - name: batch
        env:
          ENCODED_ENV: ${{ secrets.ENCODED_ENV }}
        run: |
          cd golang
          echo -n ${ENCODED_ENV} | base64 -d > .env.golang
          docker compose run golang-batch-ci go run cmd/cli/fesctl.go notify unposted --dry-run=false
          docker compose run golang-batch-ci go run cmd/cli/fesctl.go notify today --dry-run=false
      - name: success
        uses: sarisia/actions-status-discord@v1
        if: success()
        with:
          description: "festival database Batch Success!!"
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
      - name: failure
        uses: sarisia/actions-status-discord@v1
        if: failure()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          description: "festival database batch Batch Failure!!"
          color: 0xff91a4
